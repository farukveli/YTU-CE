;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Cum Mar 11 2016
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
DIGITS  DB 00H
AD	DB 46H, 61H, 72H, 75H, 6BH, 20H, 56H, 65H, 6CH, 69H, 20H, 4FH, 7AH, 64H, 65H, 6DH, 69H, 72H, 0DH
DATA    ENDS

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
MAIN	PROC	FAR
    MOV AX, DATA
    MOV DS, AX			
    
    MOV DX, 0302H
    MOV AL, 01001101B
    OUT DX, AL			;MOD REGISTER
    
    MOV AL, 40H
    OUT DX, AL			;CONTROL REGISTER - RESET
    
    MOV AL, 01001101B
    OUT DX, AL			;MOD REGISTER AGAIN
    
    MOV AL, 00010101B		;CONTROL REGISTER FOR READ&WRITE
    OUT DX, AL
    
ENDLESS:

    CALL INPUT			;INPUT FROM VIRTUAL TERMINAL
    CALL PRINT			;PRINT TO  VIRTUAL TERMINAL

    JMP ENDLESS
    RETF
MAIN ENDP 
   
   
RxRDY	PROC NEAR   		;CHECK RxRDY PIN IS LOGIC 1 FOR RECIEVE DATA
    MOV DX, 0302H
TEKRAR:
    IN AL, DX
    AND AL, 02H
    JZ TEKRAR
    RET
RxRDY	ENDP       


TxRDY	PROC NEAR		;CHECK TxRDY PIN IS LOGIC 1 FOR TRANSMIT DATA
    MOV DX, 0302H		
TEKRAR:
    IN AL, DX
    AND AL, 01H
    JZ TEKRAR	
    RET
TxRDY ENDP       

INPUT	PROC NEAR		;INPUT FROM VIRTUAL TERMINAL
      MOV BX,1
      XOR CX,CX
BASLA: 	
      CALL RxRDY
      MOV DX, 0300H
      IN AX, DX
      SHR AX,1 
      
      CMP AX, 0DH		;CHECK INPUT IS ENTER (0DH IS ASCII CODE OF ENTER)
      JZ BITIS			;IF INPUT IS ENTER JUMP TO END OF PROCESS
      PUSH AX			
      CALL TxRDY		
      POP AX	
      MOV DX,300H
      OUT DX,AX
      SUB AX,48			;SUBTRACT 48 FROM AX FOR CONVERT ASCII TO NUMERIC 
      XCHG AX,CX		
      MUL BL			;
      XCHG AX,CX
      ADD CX, AX
      MOV AX,BX
      MOV BX,10
      MUL BL
      MOV BX,AX
      JMP BASLA
BITIS:
      CMP CX,0
      JZ BASLA
      CALL TxRDY
      MOV DX,300H
      MOV AX,0DH
      OUT DX,AX
      RET
INPUT	ENDP

PRINT	PROC NEAR		;PRINT TO VIRTUAL TERMINAL
	MOV BX,1
L1:
	XOR SI,SI			
	PUSH CX
	MOV CX ,19
	
	
	CMP BX,10
	JB TEK_BASAMAK
	MOV AX,BX
	PUSH BX
	MOV BX,10
	DIV BL
	PUSH BX
	MOV BX,AX
	CALL TxRDY
	MOV AX,BX
	ADD AX,48
	MOV DX,0300H
	OUT DX,AX
	SUB AX,48
	POP BX
	MUL BL
	POP BX
	PUSH BX
	XCHG AX,BX
	SUB  AX,BX
	MOV BX,AX
	CALL TxRDY
	MOV AX,BX
	ADD AX,48
	MOV DX,0300H
	OUT DX,AX
	POP BX
	JMP ARTTIR
TEK_BASAMAK:
	CALL TxRDY
	MOV DX,0300H
	MOV AX,BX
	ADD AX,48
	OUT DX,AX			
ARTTIR:	
	INC BX			;WRITE NUMBER
      
	CALL TxRDY
    
	MOV DX,0300H
	MOV AX,45
	OUT DX,AX		;WRITE '-' CHARACTER
   
L2: 
	CALL TxRDY
	MOV DX, 0300H
	MOV AL, AD[SI]
	OUT DX, AL
	INC SI
	LOOP L2
	POP CX
	LOOP L1
    
	RET
PRINT	ENDP

CODE    ENDS
        END MAIN